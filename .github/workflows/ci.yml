name: Node.js CI Pipeline

on:
  pull_request:
    branches:
      - devel
      - stage
      - prod

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js version
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 15.5.1

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install && npm install --save-dev prettier

      # Step 4: Run ESLint
      - name: Run linter
        run: npm run lint

      # Step 5: Run Prettier (Auto-fix)
      - name: Run Prettier auto-fix
        run: npx prettier --write .

      # Step 6: Run tests with Jest
      - name: Run tests
        run: CI=true npm run test

      # Step 7: Build the project
      - name: Build the project
        run: npm run build

      # Step 2: Set up environment variable for Terraform directory
      - name: Set up environment variable for Terraform directory
        run: |
          if [ "${{ github.ref_name }}" == "stage" ]; then
            echo "TF_ENV=stage" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "prod" ]; then
            echo "TF_ENV=prod" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "devel" ]; then
            echo "TF_ENV=devel" >> $GITHUB_ENV
          else
            echo "Unknown branch, failing..."
            exit 1

      # Step 3: Set up Terraform CLI
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      # Step 4: Change the working directory to the correct environment folder
      - name: Change directory to environment folder
        run: cd ${{ env.TF_ENV }}

      # Step 5: Initialize Terraform
      - name: Initialize Terraform
        run: terraform init

      # Step 6: Apply Terraform with the correct variable file
      - name: Terraform Apply
        run: terraform apply -auto-approve -var-file=terraform.tfvars
